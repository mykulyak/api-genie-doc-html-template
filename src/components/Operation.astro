---
import { Icon } from "astro-icon/components";
import MarkdownBlock from "./MarkdownBlock.astro";
import { useTranslation } from "../i18n";

interface Props {
  id: string;
  operationId?: string;
  method: string;
  path: string;
  summary: string;
  deprecated?: boolean;
}

const { id, operationId, method, path, summary, deprecated } = Astro.props;

const hasHeaderParams = Astro.slots.has("header_parameters");
const hasPathParams = Astro.slots.has("path_parameters");
const hasQueryParams = Astro.slots.has("query_parameters");
const hasCookieParams = Astro.slots.has("cookie_parameters");
const hasParams =
  hasHeaderParams || hasPathParams || hasQueryParams || hasCookieParams;

const __ = useTranslation(Astro);
---

<div id={id} class="mb-5 flex gap-4">
  <div class="basis-[60%] grow-6">
    <h3 class="text-2xl font-bold mb-2 sticky top-4 bg-white">
      <a href={`#${id}`}>
        <span class="hover:underline">{summary}</span>
        <Icon name="link" class="inline-block text-slate-400" />
      </a>
    </h3>
    {
      deprecated && (
        <div class="text-sm mb-1 text-yellow-600">
          <Icon name="warning" class="inline-block mr-1" size={24} />
          {__("operation.deprecated")}
        </div>
      )
    }
    {operationId && <div class="text-sm mb-1 font-mono">{operationId}</div>}
    <div class="mb-1">
      <span class="font-bold font-mono uppercase">{method}</span>
      <span class="ml-1 font-mono">{path}</span>
    </div>

    <MarkdownBlock>
      <slot name="description" />
    </MarkdownBlock>

    {
      hasParams && (
        <h4 id={`#${id}__params`} class="text-xl font-bold mt-4 mb-2">
          <a href={`#${id}__params`}>{__("operation.sections.parameters")}</a>
        </h4>
      )
    }
    {
      hasHeaderParams && (
        <h5 class="font-bold text-lg mb-2">
          {__("operation.sections.headerParameters")}
        </h5>
      )
    }
    <slot name="header_parameters" />
    {
      hasPathParams && (
        <h5 class="font-bold text-lg mb-2">
          {__("operation.sections.pathParameters")}
        </h5>
      )
    }
    <slot name="path_parameters" />
    {
      hasQueryParams && (
        <h5 class="font-bold text-lg mb-2">
          {__("operation.sections.queryParameters")}
        </h5>
      )
    }
    <slot name="query_parameters" />
    {
      hasCookieParams && (
        <h5 class="font-bold text-lg mb-2">
          {__("operation.sections.cookieParameters")}
        </h5>
      )
    }
    <slot name="cookie_parameters" />

    {
      Astro.slots.has("request_body") && (
        <h4 class="text-xl font-bold mt-4 mb-2">
          {__("operation.sections.requestBody")}
        </h4>
      )
    }
    <slot name="request_body" />

    <slot name="responses" />

    {
      Astro.slots.has("usages") && (
        <div class="mt-3">
          <h3 class="text-2xl font-bold mb-2">{__('operation.sections.usage')}</h3>
          <slot name="usages" />
        </div>
      )
    }
  </div>
  <div class="basis-[40%] grow-4">
    <div class="sticky top-4">
      <slot name="code" />
      <slot name="example" />
      <slot name="responseSchemas" />
    </div>
  </div>
</div>
